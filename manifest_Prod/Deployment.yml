apiVersion: apps/v1
kind: Deployment
metadata:
  name: petclinic-deployment
  namespace: petclinic-prod
  labels:
    app: petclinic-label-prod
spec:
  replicas: 2
  selector:
    matchLabels:
      app: petclinic-label-prod
  template:
    metadata:
      labels:
        app: petclinic-label-prod
    spec:
      serviceAccountName: petclinic-sa-prod
      # initContainers:
      #   - name: wait-for-mysql
      #     image: busybox   # this will loopup for mysql backend service and make sure to start the mail container untill the backend get started this will continuously lookup for backend service in a loop for every 2 sec and exit from loop only then the backend get started.
      #     command:
      #       [
      #         "sh",
      #         "-c",
      #         "until nslookup mysql-headless-backend.petclinic-prod.svc.cluster.local; do echo waiting for mysql-headless-backend; sleep 2; done",
      #       ]
      containers:
      - name: petclinic-prod
        image: prasannakumarsinganamalla431/petclinic:12
        ports:
        - containerPort: 80
        env:
        - name: MYSQL_URL
          valueFrom:
            configMapKeyRef:
              name: petclinic-config
              key: MYSQL_URL
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysecret-prod
              key: ROOT_PASSWORD     
        - name:  MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysecret-prod1
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysecret-prod2
              key: MYSQL_PASSWORD
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "512Mi"
            cpu: "1000m"

